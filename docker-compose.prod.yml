version: '3.8'

services:
  trading-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fx-trading-bot-prod
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - trading_data:/app/data
      - trading_logs:/app/logs
      - ./.env:/app/.env:ro
    environment:
      - TZ=UTC
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
    networks:
      - trading_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      
  prometheus:
    image: prom/prometheus
    container_name: trading-prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - trading_network
      
  grafana:
    image: grafana/grafana
    container_name: trading-grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=your_secure_password
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - trading_network
    depends_on:
      - prometheus

networks:
  trading_network:
    driver: bridge

volumes:
  trading_data:
  trading_logs:
  prometheus_data:
  grafana_data: 